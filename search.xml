<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>그동안 그렸던 그림들</title>
      <link href="/2018/09/14/hobby/180914_%EA%B7%B8%EB%A6%BC/"/>
      <url>/2018/09/14/hobby/180914_%EA%B7%B8%EB%A6%BC/</url>
      <content type="html"><![CDATA[<p>작년부터 그린 그림들!</p>]]></content>
      
      <categories>
          
          <category> hobby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 그림 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>옛날 프로젝트 영상찾았다</title>
      <link href="/2018/09/14/daily/180914_%EC%98%9B%EB%82%A0%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%98%81%EC%83%81/"/>
      <url>/2018/09/14/daily/180914_%EC%98%9B%EB%82%A0%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%98%81%EC%83%81/</url>
      <content type="html"><![CDATA[<iframe width="560" height="315" src="https://www.youtube.com/embed/DF5fNkViXdo" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe><p>추억이다ㅠㅠ</p>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 프로젝트 </tag>
            
            <tag> 게임 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C++ 가상함수에 대해서</title>
      <link href="/2018/09/13/programming/180913_CPP%EA%B0%80%EC%83%81%ED%95%A8%EC%88%98/"/>
      <url>/2018/09/13/programming/180913_CPP%EA%B0%80%EC%83%81%ED%95%A8%EC%88%98/</url>
      <content type="html"><![CDATA[<p>그동안 상속의 개념을 쓰면서도 다형성이 어떻게 지원되는지 그런 부분에 대해서는 조금 얕게(?) 생각했습니다.  컴파일러가 알아서 잘 해주겠거니~ 하는 마음 ㅎㅎ. 조금더 자세히 알아두면 좋을 것 같아 정리해봅니다!</p><p>내용은 가상함수가 무엇인지, 왜 쓰는지, 어떻게 동작하는지 에 대해서 쓸 예정입니다.</p><h1 id="가상함수란"><a href="#가상함수란" class="headerlink" title="가상함수란"></a>가상함수란</h1><p>C++에서 상속을 이용한다면, 상속받아야 하는 함수에는 virtual 키워드를 붙여야합니다. virtual 없이 override 하는 경우에는 기본 클래스 포인터로 override한 함수를 호출할 수 없습니다.</p><h2 id="가상함수를-쓰지-않으면"><a href="#가상함수를-쓰지-않으면" class="headerlink" title="가상함수를 쓰지 않으면?"></a>가상함수를 쓰지 않으면?</h2><p>코드를 먼저 보는 게 빠르겠죠</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;<span class="built_in">cout</span> &lt;&lt; <span class="string">"냠"</span> &lt;&lt; <span class="built_in">endl</span>;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span><span class="keyword">public</span> Animal&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;<span class="built_in">cout</span> &lt;&lt; <span class="string">"냥"</span> &lt;&lt; <span class="built_in">endl</span>;&#125;<span class="comment">//기본클래스의 함수를 덮어쓰려 합니다.</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//----------------------</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Animal *pAnimal;</span><br><span class="line">    Cat cat;</span><br><span class="line">    </span><br><span class="line">    pAnimal = &amp;cat;</span><br><span class="line">    pAnimal-&gt;eat();<span class="comment">//"냠"</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Cat의 함수를 호출하려 했으나 기본클래스인 Animal의 함수가 호출됩니다. 왜 이러는 걸까요?</p><blockquote><p> 컴파일러는 포인터의 타입으로 판단하기 때문입니다.</p></blockquote><p>판단! 그렇죠. 컴파일러는 작성한 코드를 보고, 어떤 함수를 실행시킬지 매치시켜서 어셈블리 코드로 변환하겠지요. 그런데 포인터의 타입이 Animal 이라면? Animal 의 함수가 실행되게끔 만들겠지요?</p><p>C# 에서는 문제없이 됐는걸요! 그건 어떻게 동작되는 거에요? 하는 궁금증이 생깁니다. 추측으로는 객체마다 Type에 대한 정보를 따로 담아두고 기본클래스 함수호출시 실제 타입이 어떤지 확인하는 식이 아닐까 생각하는데요. 그건 잠시 미뤄두겠습니다.</p><h2 id="가상함수를-적용하면"><a href="#가상함수를-적용하면" class="headerlink" title="가상함수를 적용하면?"></a>가상함수를 적용하면?</h2><p>그렇다면 가상함수를 적용하려면 어떻게 해야할까요? 간단하게 virtual 키워드만 붙이면 해결입니다!</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">virtual</span> ~Animal()&#123;&#125;<span class="comment">//가상 소멸자 -&gt; 아래에서 설명</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;<span class="comment">//가상함수입니다</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span><span class="keyword">public</span> Animal&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    ~Cat()&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> override</span>;<span class="comment">//가상함수를 override 합니다</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//----------------------</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Animal *pAnimal;</span><br><span class="line">    Cat cat;</span><br><span class="line">    </span><br><span class="line">    pAnimal = &amp;cat;</span><br><span class="line">    pAnimal-&gt;eat();<span class="comment">//"냥"</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>virtual 을 이용했더니 제대로 Cat 의 함수가 호출됩니다!</p><p>정리하자면, 가상함수를 쓰는 이유는 “다형성을 지원할 수 있다” 겠네요</p><h1 id="가상함수동작방식"><a href="#가상함수동작방식" class="headerlink" title="가상함수동작방식"></a>가상함수동작방식</h1><p>가상함수가 어떤 것이고, 왜 써야하는지 대강 알겠어요. 그런데 virtual 키워드만 붙이면 기본 클래스의 포인터를 보고도 파생 클래스를 찾아준다니, 어떻게 그게 되는거죠?</p><p>컴파일할 때 Animal(기본 클래스) 의 포인터 타입으로 함수를 호출한다면 Animal 의 함수를 호출하게끔 바인드하겠지요. 하지만 Animal(기본 클래스) 의 함수에 virtual 키워드가 붙어있으면 인스턴스의 타입에 따라 함수를 바인드합니다.</p><p>그럼 인스턴스의 타입은 어떻게 알고, 바인드는 어떻게 하는 걸까요. 그건 가상함수 테이블을 이용해서 이뤄집니다.</p><h2 id="가상함수테이블"><a href="#가상함수테이블" class="headerlink" title="가상함수테이블"></a>가상함수테이블</h2><p>가상함수테이블은 파생 클래스마다 생성이 됩니다. 기본 클래스의 virtual 함수를 override한 함수가 어디있는지 저장해놓는 테이블입니다.</p><p>파생 클래스 인스턴스들은 가상함수테이블을 가르키는 가상함수포인터를 가지고있습니다.</p><p>그러니까 인스턴스의 가상함수포인터를 통해서 가상함수 테이블을 참조하고, 해당하는 함수의 주소를 찾아서 호출하는 방식이지요!</p><p><img src="/images/programming/180913_가상함수_3.PNG" alt="Image"></p><h3 id="디버깅-툴로-확인하기-1"><a href="#디버깅-툴로-확인하기-1" class="headerlink" title="디버깅 툴로 확인하기 #1"></a>디버깅 툴로 확인하기 #1</h3><p>어떤 구조로 들어있는 건지 확인해볼까요? Visual Studio는 좋은 툴이에요. 디버깅을 해봅시다</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">virtual</span> ~Animal() &#123; &#125;<span class="comment">//가상소멸자</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;<span class="comment">//가상함수</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"냠"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> :</span><span class="keyword">public</span> Animal &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">~Cat() &#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;<span class="comment">//가상함수를 override 합니다</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"냥"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> :</span><span class="keyword">public</span> Animal &#123;<span class="comment">//Cat과의 차이를 보기 위해 추가했습니다</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">~Dog() &#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;<span class="comment">//가상함수를 override 합니다</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"멍"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//----------------------</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Animal *pAnimal1, *pAnimal2;</span><br><span class="line">Cat cat;</span><br><span class="line">Dog dog;</span><br><span class="line"></span><br><span class="line">pAnimal1 = &amp;cat;</span><br><span class="line">pAnimal2 = &amp;dog;</span><br><span class="line"></span><br><span class="line">pAnimal1-&gt;eat();<span class="comment">//"냥"</span></span><br><span class="line">pAnimal2-&gt;eat();<span class="comment">//"멍"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/programming/180913_가상함수_1.PNG" alt="Image"></p><p>Cat클래스의 인스턴스에 __vfptr(가상 함수 포인터)이라는게 눈에 띄네요. 값을 보니 <code>Cat::vftable[3]()</code> 이라는게 있는데 이게 virtual funtion table(가상함수테이블) 인가봅니다. 안에는 virtual 키워드가 붙어있던 함수들이 있군요. 소멸자와 eat() 함수가 들어있습니다.</p><h3 id="디버깅-툴로-확인하기-2"><a href="#디버깅-툴로-확인하기-2" class="headerlink" title="디버깅 툴로 확인하기 #2"></a>디버깅 툴로 확인하기 #2</h3><p>가상함수를 쓰지 않는다면  구조는 아래와 같습니다</p><p><img src="/images/programming/180913_가상함수_2.PNG" alt="Image"></p><p>단순하네요. 가상함수를 썼을 때는 인스턴스마다 __vfptr(가상 함수 포인터)가 들어갔고, 가상 함수 포인터가 가르키는 곳에는 가상함수테이블이 있었는데, 얘는 밋밋해요.</p><p>가상함수는 다형성을 지원하도록 해주는 정말 좋은 아이지만, 그렇다고 필요하지 않은 곳에 사용하면 안됩니다. 인스턴스마다 가상 함수 포인터(4bytes)가 들어간다면 크기가 커질테니까요.</p><h1 id="가상소멸자"><a href="#가상소멸자" class="headerlink" title="가상소멸자"></a>가상소멸자</h1><p>Animal(기본 클래스)의 포인터를 사용해서 함수를 호출하면 Cat(파생 클래스)의 함수가 호출되지 않는다고 했습니다. 그러면 소멸자의 경우에는 어떨까요?</p><p>소멸자도 마찬가지입니다. Animal(기본 클래스)의 포인터 타입을 보고 소멸자를 바인드하기 때문에 Cat(파생 클래스)의 소멸자는 호출되지 않습니다.</p><p>파생 클래스의 소멸자가 호출되지 않으면 파생 클래스에서 할당된 메모리는 어떻게 되는거죠? 새는거죠. 어떤 클래스를 기본 클래스로 사용하고 싶다면 소멸자에는 꼭 virtual 을 붙여줍시다!</p><h2 id="순수-가상-소멸자"><a href="#순수-가상-소멸자" class="headerlink" title="순수 가상 소멸자"></a>순수 가상 소멸자</h2><p>순수 가상 소멸자라는 얘기를 들었어요. 가상 소멸자는 이제 알겠는데, 왜 순수가 붙는거죠? :o</p><h3 id="순수함수와-순수가상함수"><a href="#순수함수와-순수가상함수" class="headerlink" title="순수함수와 순수가상함수"></a>순수함수와 순수가상함수</h3><p>순수함수는 파라미터에 의해서만 함수의 동작이 결정되는 함수입니다. 같은 파라미터를 넣었다면 같은 값이 리턴되죠. 그 외에 Side Effect가 없어야 합니다.</p><p>순수가상함수는 순수함수와 다릅니다. 그냥 의미가 달라요. 순수가상함수는 구현이 없는 가상함수입니다. 순수가상함수를 포함하면 해당 클래스는 추상 클래스가 되지요.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>= <span class="number">0</span>;<span class="comment">//0을 대입하면 순수가상함수</span></span><br></pre></td></tr></table></figure><h3 id="순수가상소멸자"><a href="#순수가상소멸자" class="headerlink" title="순수가상소멸자"></a>순수가상소멸자</h3><p>그렇다면 순수가상소멸자는 왜 사용하는 걸까요?</p><p>JAVA같은 경우엔 추상 클래스로 만드려면 abstract 키워드를 이용했습니다. C++에서 추상 클래스를 만드려면 <strong>순수 가상 함수</strong>를 포함하면 해당 클래스는 추상클래스가 됩니다. 하지만 마땅히 가질만한 순수 가상 함수가 없는 경우에는 어떻게 추상 클래스로 만들 수 있을까요?</p><p>그 방법이 순수가상소멸자입니다.  소멸자를 순수가상함수로 만듦으로서 추상클래스로 만드는 겁니다.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//.h 선언</span></span><br><span class="line"><span class="keyword">virtual</span> ~Animal() = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>아, 그런데 참 재밌는게 파생 클래스의 소멸자가 호출된 후에 기본 클래스의 소멸자도 호출됩니다. 그러니까 순수가상소멸자로 구현없이 남겨두면 기본 클래스의 소멸자를 찾을 수 없다는 오류메시지가 마구마구 뜬다는 말이죠.</p><p>아무것도 안하는 순수가상소멸자더라도 선언과 정의는 빼먹지 말아야합니다</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//.cpp 정의</span></span><br><span class="line">Animal::~Animal()&#123;&#125;</span><br></pre></td></tr></table></figure><p>넵 이렇게 가상함수에 대해 정리해봤습니다. 어서빨리 C++에서도 객체지향을 즐길(?) 수 있게 되면 좋겠네요! 한줄한줄 끝없는 구글링은 싫어욧!</p>]]></content>
      
      <categories>
          
          <category> programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 가상함수 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C++ Template란?</title>
      <link href="/2018/09/07/programming/180907_CPPtemplate/"/>
      <url>/2018/09/07/programming/180907_CPPtemplate/</url>
      <content type="html"><![CDATA[<p>C++ Template 은 알 것 같으면서도 모르겠다. 다시 한번 정리를 한번하고가야 써야할 때 제대로 활용할 수 있을 것같다.</p><h1 id="C-Generic"><a href="#C-Generic" class="headerlink" title="C# Generic"></a>C# Generic</h1><p>혹시 C#을 하신 분이라면 generic에 대해 한번은 들어봤을 것이다. <del>나도 딱히 즐겨사용하던 건 아니지만..</del> 예를 들면 list같은 자료구조를 구현한 클래스에 generic이 적용된 경우 int, float 같은 타입에 상관없이 사용할 수 있다. </p><blockquote><p>generic을 이용해서 자료구조같은 걸 직접 구현하지 않았더라도 다음과 같은 걸 사용해본 적은 있지 않을까?</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; List&lt;Interger&gt; myList = new List&lt;Integer&gt;();</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h2 id="C-generic-C-template"><a href="#C-generic-C-template" class="headerlink" title="C# generic / C++ template"></a>C# generic / C++ template</h2><p>C++의 Template는 C#의 Generic과 비슷하지만 몇가지 차이점이 있다.</p><p><a href="https://docs.microsoft.com/ko-kr/dotnet/csharp/programming-guide/generics/differences-between-cpp-templates-and-csharp-generics" target="_blank" rel="noopener">msdn 문서</a>에서는 다음과 같이 주요 차이점을 설명하고 있다.</p><ul><li>C# 제네릭은 C++ 템플릿과 동일한 수준의 유연성을 제공하지 않습니다. 예를 들어 C# 제네릭 클래스에서 산술 연산자는 호출할 수 없지만 사용자 정의 연산자는 호출할 수 있습니다.</li><li>C#에서는 <code>template C&lt;int i&gt; {}</code> 같은 비형식 템플릿 매개 변수를 허용하지 않습니다.</li><li>C#은 명시적 특수화 즉, 특정 형식에 대한 템플릿의 사용자 지정 구현을 지원하지 않습니다.</li><li>C#은 부분 특수화 즉, 형식 인수의 하위 집합에 대한 사용자 지정 구현을 지원하지 않습니다.</li><li>C#에서는 형식 매개 변수를 제네릭 형식에 대한 기본 클래스로 사용할 수 없습니다.</li><li>C#에서는 형식 매개 변수가 기본 형식을 사용할 수 없습니다.</li><li>C#에서 제네릭 형식 매개 변수 자체는 제네릭이 될 수 없지만 생성된 형식은 제네릭으로 사용할 수 있습니다. C++에서는 템플릿 매개 변수를 허용합니다.</li><li>C++에서는 템플릿의 일부 형식 매개 변수에 적합하지 않아 형식 매개 변수로 사용되는 특정 형식을 확인하는 코드를 허용합니다. C#에서는 제약 조건을 충족하는 모든 형식에서 작동하는 방식으로 작성할 코드가 클래스에 필요합니다. 예를 들어 C++에서는 산술 연산자 <code>+</code> 및 <code>-</code>를 사용하는 함수를 형식 매개 변수의 개체에서 작성하여 이러한 연산자를 지원하지 않는 형식으로 템플릿을 인스턴스화할 때 오류를 생성할 수 있습니다. C#에서는 이를 허용하지 않습니다. 허용되는 유일한 언어 구문은 제약 조건에서 추론할 수 있는 구문입니다.</li></ul><p>차이점만 보았을 때는 C# Generic이 C++ Template의 간소화버전같은 느낌이다. Template 이 복잡한만큼 잘 용하면 할 수 있는 일이 많아보인다.</p><p>또한 구현수준에서의 차이점을 이렇게 설명하고 있다.</p><blockquote><p>구현 수준에서 주요 차이점은 런타임에 C# 제네릭 형식 대체가 수행되어 인스턴스화된 개체에 대해 제네릭 형식 정보가 유지된다는 점입니다.</p></blockquote><p>Template는 컴파일 시점에 타입별로 코드가 생성된다. 반면에 Generic은 런타임에 타입별로 특수화된 제네릭 형식을 만든다고 한다. <del>template는 컴파일 시점에 만드니까 컴파일 시간과 용량이 커지는 대신 속도가 빠를 것으로 예상되는데..</del> </p><h1 id="Template-란"><a href="#Template-란" class="headerlink" title="Template 란"></a>Template 란</h1><p>그래서 Template 란 어떤 것일까? 사전적 의미로는 <strong>형판</strong>을 뜻한다. 무언가(구체적인 타입)를 만들기 위한 형판이라고 보면 되겠다.</p><p><strong>만약 List 자료구조를 만드려는데 int, float, 각종 사용자 타입별로 list를 각각 구현하면 어떨까?</strong></p><p>List를 이용해야하는 타입별로 전부 코드를 작성해야할 것이다. 이용할 타입이 추가되는 경우 또 그에맞는 NewTypeList 클래스를 만들고.. 만약 메소드 기능을 바꾸려한다면? 모든 클래스를 수정해야하는 끔찍한 일이 생긴다.</p><p><strong>Temlate 를 이용하면 여러 타입에서 작동할 수 있는 클래스나 함수를 구현할 수 있다.</strong></p><p>C++ 에서 Template라는 기능을 지원하는 것에 감사하며 구체적으로 어디에 적용할 수 있는지를 알아보자!</p><h1 id="Template의-종류"><a href="#Template의-종류" class="headerlink" title="Template의 종류"></a>Template의 종류</h1><p>Template의 종류로는 함수 템플릿, 클래스 템플릿 두 가지가 있다. C++14부터는 세번째 템플릿으로 변수 템플릿이 있다. <a href="https://ko.wikipedia.org/wiki/%ED%85%9C%ED%94%8C%EB%A6%BF_(C%2B%2B" target="_blank" rel="noopener">Wiki</a>)</p><ul><li>클래스 템플릿</li><li>함수 템플릿</li><li>변수 템플릿(C++ 14 ~)</li></ul><h2 id="클래스-템플릿"><a href="#클래스-템플릿" class="headerlink" title="클래스 템플릿"></a>클래스 템플릿</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">List</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push_back</span><span class="params">(T value)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>클래스에 템플릿을 적용한 것이다.</p><hr><p>그런데 템플릿을 적용한 클래스가 모든 타입에 대해서 제대로 작동할까? 만약 특정 타입에 대해서는 전후에 해야할 작업이 있다면 어떻게 하면 좋을까</p><p><strong>그런 경우에는 특수화를 이용해서 문제를 해결할 수 있다</strong></p><h3 id="명시적특수화"><a href="#명시적특수화" class="headerlink" title="명시적특수화"></a>명시적특수화</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt; <span class="title">class</span> <span class="title">Formatter</span>&#123;</span></span><br><span class="line">    T* <span class="keyword">m_t</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Formatter(T* t) : <span class="keyword">m_t</span>(t)&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; *<span class="keyword">m_t</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;&gt; <span class="class"><span class="keyword">class</span> <span class="title">Formatter</span>&lt;char*&gt;&#123;</span></span><br><span class="line">    <span class="keyword">char</span>** <span class="keyword">m_t</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    formatter(<span class="keyword">char</span>** t) : <span class="keyword">m_t</span>(t)&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Char value: "</span> &lt;&lt; **<span class="keyword">m_t</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>클래스에서 이용하는 타입매개변수 전체에 대해 특수화할 수 있다. 위 예제에서 char* 의 경우는 특수화 된 클래스를 이용한다. 마치 클래스를 오버로딩하는 듯 하다.</p><h3 id="부분특수화"><a href="#부분특수화" class="headerlink" title="부분특수화"></a>부분특수화</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T1, <span class="keyword">typename</span> T2&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyExamClass</span>&#123;</span></span><br><span class="line">...</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T1&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyExamClass</span>&lt;T*, int&gt;&#123;</span></span><br><span class="line">...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>변수 일부에 대해 부분적으로 특수화할 수 있다.</p><h2 id="함수-템플릿"><a href="#함수-템플릿" class="headerlink" title="함수 템플릿"></a>함수 템플릿</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(T value)</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>템플릿은 함수에도 적용될 수 있다. </p><h3 id="템플릿-오버로딩"><a href="#템플릿-오버로딩" class="headerlink" title="템플릿 오버로딩"></a>템플릿 오버로딩</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(T value)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> value)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T1, T2&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(T1 val1, T2 val2)</span></span>;</span><br></pre></td></tr></table></figure><p>다른 함수들처럼 오버로딩할 수 있다.</p><h1 id="장단점"><a href="#장단점" class="headerlink" title="장단점"></a>장단점</h1><p><strong>장점</strong></p><ul><li>각 타입별로 같은 기능을 지원하는 클래스를 따로 만들 필요가 없다! (야호)</li><li>실제로 사용한 타입에 대해서만 코드가 생성된다</li></ul><p>단점</p><ul><li>컴파일 시간이 길어진다</li><li>용량이 커질 수 있다</li></ul><h1 id="ETC"><a href="#ETC" class="headerlink" title="ETC"></a>ETC</h1><h2 id="typename-class"><a href="#typename-class" class="headerlink" title="typename? class?"></a>typename? class?</h2><p>보통은 어느 것을 쓰던 상관없지만 특수한 경우가 있다고 한다. 자세한 내용은 <a href="https://hashcode.co.kr/questions/554/%ED%85%9C%ED%94%8C%EB%A6%BF%EC%97%90%EC%84%9C-typename%ED%82%A4%EC%9B%8C%EB%93%9C%EC%99%80-class%ED%82%A4%EC%9B%8C%EB%93%9C%EC%9D%98-%EC%B0%A8%EC%9D%B4" target="_blank" rel="noopener">여기</a></p><h2 id="템플릿-메타프로그래밍"><a href="#템플릿-메타프로그래밍" class="headerlink" title="템플릿 메타프로그래밍"></a>템플릿 메타프로그래밍</h2><p>템플릿 메타프로그래밍(Template Metaprogramming)은 템플릿을 이용한 프로그래밍 기법으로, 컴파일러에게 프로그램 코드를 생성하도록 하는 방식이다.<a href="https://ko.wikipedia.org/wiki/%ED%85%9C%ED%94%8C%EB%A6%BF_%EB%A9%94%ED%83%80%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D" target="_blank" rel="noopener">Wiki</a></p><p>Template는 컴파일 시점에 코드가 생성된다. 따라서 런타임이 아닌 컴파일 시점으로 작업을 옮길 수 있어 <strong>잘만</strong> 이용하면 효율적이다. 물론 디버깅도 어렵고 잘못하면 안좋을 것같다..</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">int</span> N&gt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Factorial</span> &#123;</span></span><br><span class="line">    <span class="keyword">enum</span> &#123;value = N * Factorial&lt;N<span class="number">-1</span>&gt;::value&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">template</span>&lt;&gt;</span><br><span class="line">sturct Factorial&lt;<span class="number">0</span>&gt;&#123;</span><br><span class="line"><span class="keyword">enum</span> &#123;value = <span class="number">1</span>&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//Factorial&lt;4&gt;::value == 24</span></span><br><span class="line"><span class="comment">//Factorial&lt;0&gt;::value == 1</span></span><br></pre></td></tr></table></figure><p>팩토리얼이 예제로 많이 나오는데, 템플릿의 경우 컴파일 때 타입별로 코드를 생성하므로, 필요한 팩토리얼 값만 구할 수 있다. 다만 <code>Factorial&lt;X&gt;::value</code> 에서 X는 컴파일 시점에 알 수 있는 상수 값이어야 한다.</p>]]></content>
      
      <categories>
          
          <category> programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> template </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>깃허브 블로그 시작!</title>
      <link href="/2018/09/06/daily/180906_%EB%B8%94%EB%A1%9C%EA%B7%B8%EC%8B%9C%EC%9E%91/"/>
      <url>/2018/09/06/daily/180906_%EB%B8%94%EB%A1%9C%EA%B7%B8%EC%8B%9C%EC%9E%91/</url>
      <content type="html"><![CDATA[<p>네이버 블로그를 쓰다가 꾸미는데 답답함을 느껴서 이사왔다!<br>블로그 처음 시작할때는 내용이 좀 대충이더라도 꾸준히 포스팅을 하자고 생각했는데, 공부만 아니라 포스팅하는데도 시간이 걸리다보니 계속 미루게 됐다</p><h3 id="일하면서-보고-느낀건데-스스로-어디를-어떻게-모르는지-아는게-굉장히-중요한-것-같다"><a href="#일하면서-보고-느낀건데-스스로-어디를-어떻게-모르는지-아는게-굉장히-중요한-것-같다" class="headerlink" title="일하면서 보고 느낀건데 스스로 어디를 어떻게 모르는지 아는게 굉장히 중요한 것 같다"></a>일하면서 보고 느낀건데 스스로 어디를 어떻게 모르는지 아는게 굉장히 중요한 것 같다</h3><p>그래서 요즘은 프로그래밍하다 생각할 게 있을 때면 메모장에 내가 어떻게 생각을 해나가는지 적어보고 있다! 머리 속에서 날라가게 안놔두고 적어보니까 부족한 부분이 이전보다 잘 보여서 좋다</p><h3 id="또-한번에-정리된-내용을-적으려-하면-참-부담이-많이-된다"><a href="#또-한번에-정리된-내용을-적으려-하면-참-부담이-많이-된다" class="headerlink" title="또 한번에 정리된 내용을 적으려 하면 참 부담이 많이 된다."></a>또 한번에 정리된 내용을 적으려 하면 참 부담이 많이 된다.</h3><p>중고등학교때 노트정리를 하면 꼭 단원은 대괄호, 주제는 1. , 상세 내용은 소괄호.. 나름의 규칙을 정해서 반듯하게 정리하려 노력했었는데 시간이 엄청 걸렸다. 그래서 형식을 다 없애고 싶어서 공책을 전부 찢어서 낱장으로 썼다. 얼마든지 수정할 수 있다는 안도감?을 주고 싶었다. 훨씬 효율이 나아졌다. 그 뒤로 마음속에 <strong>적당히, 대충, 빨리</strong> 세 단어를 새겼다.</p><p>그래서 이런저런 이유로 블로그 이사온 김에 이번 블로그는 좀더 빠르게 적어보려고 한다! 적어놓고 다시 보고, 다듬어나가다보면 언젠가는 한번에 좋은 포스팅을 할 수 있겠지!</p><blockquote><p>Written with <a href="https://stackedit.io/" target="_blank" rel="noopener">StackEdit</a>.</p></blockquote>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Visual Studio로 Linux 원격 개발하기(Ubuntu 설치부터 SSH 서버접속까지)</title>
      <link href="/2018/07/21/information/180721_VisualStudio_Linux_%EC%9B%90%EA%B2%A9%EA%B0%9C%EB%B0%9C/"/>
      <url>/2018/07/21/information/180721_VisualStudio_Linux_%EC%9B%90%EA%B2%A9%EA%B0%9C%EB%B0%9C/</url>
      <content type="html"><![CDATA[<p><em>Update History</em></p><ul><li><em>2018.09.09 수정</em></li></ul><p>열혈강의 TCP/IP 책을 공부하려는데 리눅스 얘기가 좀 많이 나왔다. 책이 아니더라도 서버로 Linux는 많이 쓰이니까 알아두면 좋을 것 같아서 Linux 환경을 세팅하고 공부하고 싶었따!</p><p>원래 가지고 있던 노트북이 두개였는데, 하나는 주로 쓰는 Windows10 깔린 게이밍 노트북이고, 또 하나는 옛날에 친철오빠가 안쓰는걸 줘서 문서용으로 고맙게 쓰다가 지금은 방치해둔 노트북이다.</p><p>방치해뒀던 옛날 노트북에 Ubuntu Desktop을 깔았다. 정말 아무것도 모르는 상태에서 시작하고, 아무것도 모르는 채로 포스팅하고 있으니 읽을 때 주의바란다..ㅠㅠ</p><blockquote><p>준비물 컴퓨터 2대(Window, Linux 기반 OS)</p></blockquote><h1 id="Ubuntu-설치"><a href="#Ubuntu-설치" class="headerlink" title="Ubuntu 설치"></a>Ubuntu 설치</h1><h2 id="Ubuntu-Download-및-부팅-USB-만들기"><a href="#Ubuntu-Download-및-부팅-USB-만들기" class="headerlink" title="Ubuntu Download 및 부팅 USB 만들기"></a>Ubuntu Download 및 부팅 USB 만들기</h2><p>설치는 <a href="https://www.ubuntu.com/download/desktop" target="_blank" rel="noopener">Ubuntu 사이트</a> 에 가면 USB 부팅디스크 만드는 법이랑 설치파일이 있다.</p><p>iso 파일을 받고, <a href="https://tutorials.ubuntu.com/tutorial/tutorial-create-a-usb-stick-on-windows#0" target="_blank" rel="noopener">How to write a USB</a> 링크에 들어가면 Rufus[^1]를 이용해서 부팅용 USB를 만들 수 있다. 링크에 자세히 나와있다.</p><p><a href="https://www.ubuntu.com/download/alternative-downloads" target="_blank" rel="noopener">Alternative downloads</a> 에 들어가면 이전 버전의 Ubuntu를 설치할 수도 있다.</p><h2 id="Ubuntu-설치-1"><a href="#Ubuntu-설치-1" class="headerlink" title="Ubuntu 설치"></a>Ubuntu 설치</h2><h3 id="BIOS-설정에서-USB-부팅으로-변경"><a href="#BIOS-설정에서-USB-부팅으로-변경" class="headerlink" title="BIOS 설정에서 USB 부팅으로 변경"></a>BIOS 설정에서 USB 부팅으로 변경</h3><p>부팅용으로 만든 USB를 노트북에 꼽고, 컴퓨터를 키면서 F2(<em>F12, F10, DEL… 키 일수도 있다. 메인보드 제조사마다 다름</em>)를 누르면 BIOS 설정창에 들어온다.</p><p>거기서 USB로 부팅되게끔 설정을 바꿔준다. BIOS 설정창도 제조사마다 또 다르다.</p><h3 id="Ubuntu-설치-2"><a href="#Ubuntu-설치-2" class="headerlink" title="Ubuntu 설치"></a>Ubuntu 설치</h3><p>부팅을 USB로 바꾼 후에 재부팅하면 Ubuntu 설치가 진행된다. 블로그에 올릴생각이 아니었어서 사진은 없당…. <strong>설치 중에 입력한 사용자 이름이랑 비밀번호로 원격 접속</strong>을 할거니까 적당하게 잘 정해주도록 하자.</p><p>Windows만 썼는데 다른거 까니까 되게 신기하고 막 기분이상하다ㅠㅠㅠ감동?</p><h3 id="언어-설정"><a href="#언어-설정" class="headerlink" title="언어 설정"></a>언어 설정</h3><p><img src="/images/information/180721_VisualStudio_Linux_원격개발_1.png" alt=""></p><p><img src="/images/information/180721_VisualStudio_Linux_원격개발_2.png" alt=""></p><p>일단 언어 설정부터했다 영어가 입력이 안됐었다ㅠㅠ..</p><p>시스템 설정-&gt;텍스트입력창 을 누르면 입력 소스를 추가할 수 있다. +버튼을 눌러서 영어(미국)을 추가하자! 만약 언어가 설치안되었다면 시스템설정-&gt;언어지원에 가면 설치할 수 있다</p><h1 id="SSH-서버-열기"><a href="#SSH-서버-열기" class="headerlink" title="SSH 서버 열기"></a>SSH 서버 열기</h1><p>이제 터미널 창을 열어야지!!! 했는데 난 윈도우밖에 안써봤다.. 어떻게 열지? 할땐 구글링…</p><ul><li><code>Ctrl + Alt + T</code> 를 누르면 열리니까 참고하자  </li></ul><h2 id="vim-에디터-설치"><a href="#vim-에디터-설치" class="headerlink" title="vim 에디터 설치"></a>vim 에디터 설치</h2><p>그럼이제 SSH 서버를 열건뎅 그전에 vim 에디터[^2]를 설치했다. 설치 방법은 <a href="http://byd0105.tistory.com/7" target="_blank" rel="noopener">Ubuntu에 vi(vim)에디터 설치</a> 를 참고했다. 세상엔 친절한 사람이 정말 많다..감사합니다</p><h2 id="SSH-Secure-Shell-란"><a href="#SSH-Secure-Shell-란" class="headerlink" title="SSH(Secure Shell) 란?"></a>SSH(Secure Shell) 란?</h2><p>SSH 서버를 설치하기 전에 잠시 ssh 가 뭔지 집고 가자.</p><blockquote><p><strong>시큐어 셸</strong>(Secure Shell, <strong>SSH</strong>)은 네트워크상의 다른 컴퓨터에 로그인하거나 원격 시스템에서 명령을 실행하고 다른 시스템으로 파일을 복사할 수 있도록 해 주는 응용 프로그램 또는 그 프로토콜을 가리킨다.</p><p>출처 <a href="https://ko.wikipedia.org/wiki/%EC%8B%9C%ED%81%90%EC%96%B4_%EC%85%B8" target="_blank" rel="noopener">Wiki</a></p></blockquote><p>텔넷과 마찬가지로 원격 접속을 위한 프로토콜이며, 텔넷의 보안상 문제를 해결하기 위해 나왔으다. 텔넷은 23번, SSH는 22번 포트를 이용한다.</p><h2 id="SSH-Server-설치-및-설정"><a href="#SSH-Server-설치-및-설정" class="headerlink" title="SSH Server 설치 및 설정"></a>SSH Server 설치 및 설정</h2><p>SSH 설치와 설정에는 <a href="http://programmingskills.net/archives/315" target="_blank" rel="noopener">SSH(Secure SHell) 설치와 사용법(Ubuntu)</a> 를 참고했다.</p><h3 id="SSH-Server-설치"><a href="#SSH-Server-설치" class="headerlink" title="SSH Server 설치"></a>SSH Server 설치</h3><p>먼저 ssh Server를 설치하기 위해서 터미널에 아래 명령어를 입력했다</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssh-server g++ gdb gdbserver</span><br></pre></td></tr></table></figure><p><img src="/images/information/180721_VisualStudio_Linux_원격개발_3.png" alt=""></p><h3 id="설정"><a href="#설정" class="headerlink" title="설정"></a>설정</h3><p>그리고나서 설정파일을 수정했다. 아래 명령어를 치면 설정파일을 열 수 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>vi 에디터에서 i 를 누르면 수정이 가능하고, esc를 누르고 :wq! 를 치면 저장하고 나갈 수 있다.</p><p><img src="/images/information/180721_VisualStudio_Linux_원격개발_4.png" alt=""></p><p><img src="/images/information/180721_VisualStudio_Linux_원격개발_5.png" alt=""></p><p>Port 는 22로 되어있을건데, 굳이 바꾸지 않아도 된다. 나는 심심하니까 바꿨다.</p><p>PasswordAuthentication 을 yes로 해야 사용자 비밀번호로 들어올 수 있다. 보안 문제로 비밀번호로 들어오는 것보다는 공개키 인증방식을 권장한다고 한다. 하지만 나는 공유기 내부에서만 쓸 것이고, ssh server를 그리 자주 열어두지 않을 것이므로 편하게 비밀번호로 했다.</p><p>설정 수정이 끝났으면 <code>ESC + :wq!</code> 로 나가자.</p><h2 id="SSH-Server-열기"><a href="#SSH-Server-열기" class="headerlink" title="SSH Server 열기"></a>SSH Server 열기</h2><p>ssh server 설치와 설정이 끝난 후에 터미널 창에서 명령어를 입력하면 서버를 열 수 있다. 서버를 여는 데는 아래 명령어들이 사용된다. 차례로 입력해주자.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service ssh restart</span><br></pre></td></tr></table></figure><p>서비스 재시작</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw enable</span><br><span class="line">sudo ufw allow (설정한 포트번호)</span><br></pre></td></tr></table></figure><p>방화벽을 활성화하고, 포트를 열어준다</p><p>명령어가 헷갈릴 때는 sudo ufw help 였던가?? 아무튼 언제나 help 를 대충 붙여보면 명령어들을 알려준다. 잘 까먹는 편이라 명령어로 해야할 때는 help를 참 자주쓴다.. </p><p><img src="/images/information/180721_VisualStudio_Linux_원격개발_6.png" alt=""></p><p><img src="/images/information/180721_VisualStudio_Linux_원격개발_7.png" alt=""></p><p><img src="/images/information/180721_VisualStudio_Linux_원격개발_8.png" alt=""></p><h3 id="IP-확인"><a href="#IP-확인" class="headerlink" title="IP 확인"></a>IP 확인</h3><p>터미널에 접속하기 위해서는 IP주소가 필요한데, Ubuntu 터미널 창에 <code>ip addr</code>을 입력해서 접속할 IP를 확인하자. <code>127.0.0.1</code>은 루프백이고 좀 아래쪽에 IPv4 주소가 나올거다.</p><h1 id="Visual-Studio-SSH-개발"><a href="#Visual-Studio-SSH-개발" class="headerlink" title="Visual Studio SSH 개발"></a>Visual Studio SSH 개발</h1><p>Visual Studio 원격 접속 방법이나 VS로 디버깅하는 법은 <a href="https://m.blog.naver.com/tipsware/220991849234" target="_blank" rel="noopener">VS2017을 사용하여 리눅스 프로그래밍하기</a> 를 참고했다. 디버깅하는 법이나 라즈베리파이 관련해서 자세히알려주시니까 한번 들어가보면 조켓다! 감사합니다 ㅎㅎㅎ</p><h2 id="Linux-개발환경-설치"><a href="#Linux-개발환경-설치" class="headerlink" title="Linux 개발환경 설치"></a>Linux 개발환경 설치</h2><p>그럼이제 Windows 컴퓨터로 돌아와서 열어놓은 SSH 서버로 원격개발을 해야하는데 먼저 Visual Studio 2017 Installer 를 열어서 Linux 개발환경을 설치한다</p><p><img src="/images/information/180721_VisualStudio_Linux_원격개발_9.png" alt=""></p><h2 id="원격-시스템-연결"><a href="#원격-시스템-연결" class="headerlink" title="원격 시스템 연결"></a>원격 시스템 연결</h2><p>그리고나서 Visual Studio를 열어서 <strong>디버그-&gt;옵션-&gt;플랫폼간-&gt;연결관리자</strong> 에 들어간다. 거기서 추가를 누르면 원격 시스템에 연결할 수 있다. IP, PORT, 그리고 Ubuntu OS를 설치할때 등록한 사용자(싫으면 다른 사용자..)이름이랑 암호를 넣어준다</p><p><img src="/images/information/180721_VisualStudio_Linux_원격개발_10.png" alt=""></p><h2 id="Linux-프로젝트-생성"><a href="#Linux-프로젝트-생성" class="headerlink" title="Linux 프로젝트 생성"></a>Linux 프로젝트 생성</h2><p><img src="/images/information/180721_VisualStudio_Linux_원격개발_11.png" alt=""></p><p>새프로젝트를 만들때 플랫폼간-&gt;Linux로 생성하면 Linux 코드를 짤수있다. 빌드한 코드는 Ubuntu 노트북에 쏚쏚 들어오는데 그 경로는 프로젝트 속성에 나와있다. 기본적으로 홈/projects/(프로젝트이름) 으로 생긴다 </p><p>아! 실행했을때 printf 한게 안보여두 당황하지말고 Visual Studio의 디버그-&gt;Linux콘솔을 열어 확인하자</p><p><img src="/images/information/180721_VisualStudio_Linux_원격개발_12.png" alt=""></p><p>헤헤 이러케 설정을 마치고 네트워크프로그래밍 공부하는데 신기하당! 컴두개켜놓고 실행해보니까 <del>쿨러 도느라 덥고..폭염이고</del> 여기서짠 코드가 저기서 돌아가고 해서 신기하다!</p><p>포스팅이 처음부터 끝까지적느라 내용이 많이 부족하므로 링크 들어가서 다른분들 글을 좀더 참고하기를 추천드린다</p><p>책따라서 공부좀 하다가 어느정도 좋아지면 윈도우랑 Linux 둘다 돌아가는 코드를 짜볼 예정이다!</p><hr><p>[^1]: 부팅 가능한 USB를 만들어주는 Windows 용 오픈소스 프로그램<br>[^2]: vi 호환 텍스트 편집기. 줄번호, 문법 강조, 유니코드를 비롯한 다국어 지원 등의 기능을 갖춤.</p>]]></content>
      
      <categories>
          
          <category> information </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH </tag>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> VisualStudio </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>화면 낙서 프로그램 ScreenSketch!</title>
      <link href="/2018/04/29/download/180429_%ED%99%94%EB%A9%B4%EB%82%99%EC%84%9C/"/>
      <url>/2018/04/29/download/180429_%ED%99%94%EB%A9%B4%EB%82%99%EC%84%9C/</url>
      <content type="html"><![CDATA[<p><em>Update History</em></p><ul><li>2018.09.08 수정</li></ul><p><strong>Windows : <a href="/files/screenSketch.exe">ScreenSketch 1.0.0 Download</a></strong></p><p>간단하게 밑줄정도 그을 수 있는 프로그램을 찾다가 만들었습니다. 프로그램 창 안에서 밑줄을 그을 수 있고, 캡쳐 후 낙서하는 것이 아니라 투명창이기 때문에 배경? 화면?이 바뀌어야 하는 경우 사용하기 좋습니다</p><p><strong>기능 목록</strong></p><ul><li>낙서</li><li>창크기 조절</li><li>색, 브러쉬 사이즈 조절</li><li>캡쳐(F12)</li></ul><p>기능은 불필요한거 빼고 최대한 빠르게 만들었습니다. 간단한 밑줄 정도로 생각하고 만들어서 <strong>포커스를 잃는 경우 내용이 지워질수 있어요</strong>. 그림을 그리거나 많은양의 필기를 권하지 않습니다..</p><p>C# WinForm 이용해서 만들었고, 테스트 환경은 Windows 64bit 입니다</p>]]></content>
      
      <categories>
          
          <category> download </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 프로그램 </tag>
            
            <tag> 화면낙서 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PPT 깔끔 템플릿 무료</title>
      <link href="/2018/04/29/download/170902_PPT%ED%85%9C%ED%94%8C%EB%A6%BF/"/>
      <url>/2018/04/29/download/170902_PPT%ED%85%9C%ED%94%8C%EB%A6%BF/</url>
      <content type="html"><![CDATA[<p><em>Update History</em></p><ul><li>2017.09.03 ver2 색상 적용</li><li>2018.09.14 ver3 폰트 크기, 마스터 배경 수정</li></ul><p><strong><a href="/files/PPT템플릿_깔끔템플릿_ver3.pptx">PPT템플릿 ver3 Download</a></strong></p><p>PPT 디자인에 신경안쓰던 공대생입니다! 처음 만들어본거라 많이 미흡하지만 공유합니다</p><p>예시로 아무말 좀 써놨는데, 슬라이드 삭제하시고 쓰시면 됩니다</p><p><strong>자유롭게 이용</strong>하셔도 좋으나  <strong>재배포는 금지</strong>합니다</p><p>폰트는 <strong>한둥근체</strong> 이용하였으며, 한둥근체는 윤디자인에서 제작하여 무료로 배포하고 있습니다 한둥근체는 <a href="http://font.co.kr/yoonfont/free/free_won.asp" target="_blank" rel="noopener">여기</a>에서 다운로드 받으실수 있습니다.</p><p>제목 슬라이드에는 애니메이션 효과를 적용해놓았는데, 마음에 안드시는 분은 마스터슬라이드에서 애니메이션 효과를 없애시면 됩니다</p><p>마스터 슬라이드 적용해놔서 PPT 디자인이 귀찮으신 분들이 쓰기 편하실 겁니다</p>]]></content>
      
      <categories>
          
          <category> download </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 프로그램 </tag>
            
            <tag> 화면낙서 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>오랜만에 테일즈런너했다 육개장맨으로</title>
      <link href="/2018/04/10/hobby/180410_%ED%85%8C%EC%9D%BC%EC%A6%88%EB%9F%B0%EB%84%88%EC%9C%A1%EA%B0%9C%EC%9E%A5%EB%A7%A8/"/>
      <url>/2018/04/10/hobby/180410_%ED%85%8C%EC%9D%BC%EC%A6%88%EB%9F%B0%EB%84%88%EC%9C%A1%EA%B0%9C%EC%9E%A5%EB%A7%A8/</url>
      <content type="html"><![CDATA[<p>TV를 보는데 밥 잘사주는 예쁜 누나 라는 드라마가 하고있었다. 제목이 참 직관적이네 하면서 틀어놨는데 거기에 테일즈런너가 나왔다!!</p><p>넷이서한마음이라고 팀전맵 하고있는데 너무 재밌어보였음. 그래서 오랜만에 테일즈런너를 해봤다</p><p>닉네임이 숫자로 바껴있어서 당황했는데, 접속하니까 닉네임 설정할수있더라</p><p><img src="/images/hobby/180410_테일즈런너육개장맨_1.jpg" alt="image"></p><p>선물함에 아껴뒀던 육개장맨ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ 그땐 그저 소모품아까워서 놔뒀는데 지금보니 진짜반가움 ㅠㅠ</p><p>복귀선물인가? 산양셋 내구도 복구해줬다!! 옛날에 짱짱템이었는데 지금은 쩌리됐을것같음</p><p>2009년 이벤트캐시인지 캐시9원이 있었음</p><p><img src="/images/hobby/180410_테일즈런너육개장맨_3.jpg" alt="image"></p><p>옛날에꾸며놨던 팜에서 고기도굽고 몸풀기로 블럭맵도 해봄ㅋㅋㅋㅋㅋ</p><p>오랜만이라 대시점프 못쓸줄알았는데 손가락이 기억했다</p><p>미션으로 알케미스트 복장도 주는데 보상 완전후해짐; 예뿜 ㅠㅠ</p><p><img src="/images/hobby/180410_테일즈런너육개장맨_6.jpg" alt="image"></p><p>TR 환율 떨어짐 옛날에 3000캐시-&gt;33000TR상품권이었는데</p><p><img src="/images/hobby/180410_테일즈런너육개장맨_7.jpg" alt="image"></p><p>육개장맨 망토에도 육개장있따&gt;&lt;</p><p>육개장맨스킨이 재밌는게 옜날 10년전에 나와서그런지 신캐몇개는 적용이안됨!</p><p>바다는 적용ㅇ안되고 시호는 적용되고.. 갱장히 흥미로웠음ㅋㅋㅋㅋㅋㅋㅋㅋㅋ</p><p><img src="/images/hobby/180410_테일즈런너육개장맨_9.jpg" alt="image"></p><p>너무 오랜만에하는거라 민폐될까봐 걱정했는데 무난하게 잘해냈음ㅋㅋㅋㅋ</p><p>다행다행</p><hr><p>오랜만에해서그런지 너무 재밌었다!!</p><p>육개장맨때문인지 어떤분이 코디핵쓰지말라고 뭐라하고 나갔는데 오해에요.. 10년간 선물함 묵힌애에요ㅠㅠ</p><p>게임이 오래돼서그런지 다들 실력이 엄청나서 거의 꼴찌만한거같다ㅠ! 그래도 재밌음ㅋㅋㅋㅋㅋㅋ</p>]]></content>
      
      <categories>
          
          <category> hobby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 게임 </tag>
            
            <tag> 테일즈런너 </tag>
            
            <tag> 육개장맨 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>비와이폰 통합형 저장소 하는 법, 후기</title>
      <link href="/2017/12/17/information/171217_%ED%86%B5%ED%95%A9%ED%98%95%EC%A0%80%EC%9E%A5%EC%86%8C/"/>
      <url>/2017/12/17/information/171217_%ED%86%B5%ED%95%A9%ED%98%95%EC%A0%80%EC%9E%A5%EC%86%8C/</url>
      <content type="html"><![CDATA[<p><em>Update History</em></p><ul><li>2017.12.25 업데이트 문제 관련 내용 추가</li><li>2018.09.14 전체 내용 수정</li></ul><h1 id="하기전에"><a href="#하기전에" class="headerlink" title="하기전에"></a>하기전에</h1><p>제 핸드폰은 비와이폰입니다! 노래를 잘듣는편이 아니라 비와이는 잘모르고 좋아하지않지만.. 핸드폰이 싸서 샀어요. 연예인 잘모르다보니 연예인이름인게 음..좋아하시는분들에겐 죄송하지만 좋진 않습니다. 자꾸 물어봐요ㅠㅠ</p><p>어쨌든 최근나온 비와이폰2말고 1인데 내장메모리가 <strong>16GB</strong>  밖에 되지 않습니다! 어플좀 설치하고 게임좀 깔면 끝나버립니다!!!!우에엥 노래도 사진도 없어서 SD카드는 공간이 텅텅 남는데 증말 답답</p><p>그런데 <u><strong>SD카드+내장메모리 =&gt; 통합형저장소</strong></u> 로 만드는 방법이 있다고 해서 후다닥(은아니고 마음의준비를하고) 했어요</p><p><em>안드로이드 버전 6.0 마시멜로부터 가능하대요</em></p><h2 id="유의사항"><a href="#유의사항" class="headerlink" title="유의사항"></a>유의사항</h2><p>일단 하는방법 알려드리기 전에 말씀드리자면 아주 안정적이진 않을 것 같습니다..! 제가 겪었던 문제를 말씀드리면,</p><ul><li>그전에 내장 저장소에 설치된 파일들을 컴퓨터로 볼수있었으나 변경 후 그걸 못보게 됐습니다!(공장초기화 후 하는걸 추천)</li><li>용량 표시가 엉망입니다!!</li><li>외장메모리(통합한 저장소 중 SD카드쪽)에 앱이 설치 또는 업데이트되는 경우 폰을 다시시작해야 정상실행됩니다!</li><li>(이건 이유는 정확히 모르겠지만 통합을 의심해봄) 폰 업데이트가 제대로 안되는데, 혹시 통합때문인가 의심중입니다!</li></ul><p>이외에도 제가 발견못한 문제가 있을 수도 있습니다.  내장메모리가 정말 모자라다! 이딴 메모리로 폰을 쓰느니 어떻게든 늘리겠다! 하시는 분이라면 어쩔수 없지만, 추천드리기는 좀 어렵네요.. 저도 폰알못이라 정확히 어떻게 바뀌는지 모릅니다ㅠ <u><strong>바꾼 것에 대해 스스로 책임지실 수 있는분에게 추천드립니당..</strong></u></p><h1 id="통합형저장소-만들기"><a href="#통합형저장소-만들기" class="headerlink" title="통합형저장소 만들기"></a>통합형저장소 만들기</h1><h2 id="SD카드-amp-핸드폰-준비"><a href="#SD카드-amp-핸드폰-준비" class="headerlink" title="SD카드 &amp; 핸드폰 준비"></a>SD카드 &amp; 핸드폰 준비</h2><p>방법에 대해 말씀드리면 먼저 SD카드를 준비해줍니다! 이전에 사용하던 SD카드가 있는 경우 안의 내용을 <u><strong>백업 &amp; 포맷</strong></u>해줍니다</p><p>SD카드 준비가 끝나셨으면 핸드폰도 정리해줍니다(필수는 아니고 추천드림) 가능하면 <u><strong>공장초기화</strong></u>까지 하는게 좋습니다</p><p>핸드폰 내장메모리에 설치되어있던 파일을, 통합 후에는 폴더뷰어를 통해 볼 수 없게되기 때문에.. 한번 정리를 추천드림! // 통합 후 설치된내용은 보이더라구요</p><h2 id="Android-adb-설치"><a href="#Android-adb-설치" class="headerlink" title="Android adb 설치"></a>Android adb 설치</h2><p>또 Android 사이트에 가서 adb를 설치해주셔야하는데.. 저는 이전에 안드로이드스튜디오 설치한적이 있어서 이과정은 생략했어요..<br><a href="https://developer.android.com/studio/releases/platform-tools.html" target="_blank" rel="noopener">Android sdk platform-tools 설치</a>에서 sdk platform-tools 설치해주시면 됩니다</p><p><img src="/images/information/171217_통합형저장소_1.png" alt="image"></p><h2 id="핸드폰-연결"><a href="#핸드폰-연결" class="headerlink" title="핸드폰 연결"></a>핸드폰 연결</h2><p>설치하셨으면 핸드폰을 <strong><u>컴퓨터랑 연결</u></strong>해주시구 아! 핸드폰 <strong><u>개발자옵션</u></strong> 키셔야합니다<br>폰정보에서 빌드번호 루루루루루 눌러주면 설정에 개발자옵션 메뉴가 생기는데 들어가서 USB 디버깅 허용해주세요</p><ul><li>개발자 옵션 메뉴 보이도록 하기. (설정/휴대전화 정보/빌드번호 여러번 터치)</li></ul><p><img src="/images/information/171217_통합형저장소_2.png" alt="image"></p><ul><li>생겨난 개발자 옵션 메뉴 들어가기. (설정/개발자 옵션)</li></ul><p><img src="/images/information/171217_통합형저장소_3.png" alt="image"></p><ul><li>개발자 옵션에서 USB디버깅 허용.</li></ul><p><img src="/images/information/171217_통합형저장소_4.png" alt="image"></p><h2 id="adb-명령어-입력"><a href="#adb-명령어-입력" class="headerlink" title="adb 명령어 입력"></a>adb 명령어 입력</h2><p>이제 adb 쉘에서 명령어로 설정해주셔야하는뎅.. 아까 설치한 sdk platform-tools안에 adb가 있을겁니다! 이걸 쉘을 실행시켜 들어가야합니당~~</p><p>전 윈도우라 cmd 열어서 adb 파일있는 폴더로 찾아들어갔어요! 빨간표시는.. 제사용자명이라 &gt;&lt;..부끄</p><p><strong>platform-tools 설치된 폴더로 들어가서 <u>adb shell</u> 쳐주시구요</strong></p><p><img src="/images/information/171217_통합형저장소_5.png" alt="image"></p><p>들어가서 메모리 정보를 가져와야하는데 <strong><u>sm list-disks</u></strong> 치시면 됩니다<br>이게 disk:179,64 disk:179_64 뭐..숫자도 다를수있고 그래요<br>저는 disk:179:64 네요</p><p><img src="/images/information/171217_통합형저장소_6.png" alt="image"></p><p>그럼 해당 메모리를 통합형으로 바꿔야겠죠?</p><ul><li><code>sm partition &lt;위에서 얻은 메모리 아이디&gt; private</code> =&gt; 이렇게 하시면 외장메모리 전체가 통합형으로 바뀌고</li><li><code>sm partition &lt;위에서 얻은 메모리 아이디&gt; mixed 30</code> =&gt; 이렇게하시면 외장메모리중 30%가 통합형으로 바뀌었나…? 그래요</li></ul><p>전 절반은 외장메모리로 사진,음악,공부용문서들 넣어놓고 쓸거라 mixed 50으로 했어요!</p><p>여기까지 과정끝내셨으면 이제 폰들어가시면 메모리 바뀌어 보일겁니다~~~</p><h1 id="늘어난-용량-확인"><a href="#늘어난-용량-확인" class="headerlink" title="늘어난 용량 확인"></a>늘어난 용량 확인</h1><p>내용은 지멋대로 표시되지만 용량은 어쨌든 늘어난모습 ㅋㅋㅋ</p><p><img src="/images/information/171217_통합형저장소_7.png" alt="image"></p><p><img src="/images/information/171217_통합형저장소_8.png" alt="image"></p><p>역시나 내장저장소 용량이 지멋대로 표시되지만 어쨌든 늘어났음..<br>통합형으로 바꾼후 내장저장소에 설치된 파일들이 뷰어로 보임!!</p><p><img src="/images/information/171217_통합형저장소_9.png" alt="image"></p><p><img src="/images/information/171217_통합형저장소_10.png" alt="image"></p><p>외장메모리에 설치된앱은 저장위치 변경가능( 내장-&gt;외장으로는 이메뉴가 안뜨더라구여)</p><p><img src="/images/information/171217_통합형저장소_11.png" alt="image"></p><p><img src="/images/information/171217_통합형저장소_12.png" alt="image"></p><p>외장메모리에 앱이 설치되는경우 앱실행할때</p><ul><li>해당하드웨어는 지원되지않음! 라고 메시지가 뜨거나</li><li>실행이 안되거나</li></ul><p>하는 경우가 있는데 당황하지마시고 <strong><u>폰 다시시작</u></strong> 하시면 정상실행 됩니다!!(저는 그랬음)</p><p>=&gt; 바꿔말하자면 외장에 설치하는경우 귀찮아도 다시시작을 해줘야한다는것..</p><h1 id="정리"><a href="#정리" class="headerlink" title="정리"></a>정리</h1><ul><li>SD카드 준비(백업+포맷)</li><li>핸드폰 내장메모리 정리(필수X)</li><li>핸드폰 개발자옵션에서 USB디버깅 켜기(빌드번호 여러번클릭시 개발자옵션 활성화)</li><li>Android Developer 사이트에서 sdk platform-tools 설치</li><li>폰이랑 컴 연결하고 adb 쉘 열어서 명령어 입력 <code>sm list-disks sm partition &lt;디스크아이디&gt; private (private 혹은 mixed 50 - 원하는 비율)</code></li></ul><p>끝~~</p><h1 id="추가된-내용"><a href="#추가된-내용" class="headerlink" title="추가된 내용"></a>추가된 내용</h1><p>  ** 추가<br>SD카드 폰에서 제거하시면 안됩니다!</p><p>앱 설치 후에 실행하면 추가적으로 다운로드가 필요한 앱이 외장에 설치되는경우<br>혹시 폰 다시시작하면 다시받아야하는거아닐까!하는 의문이 있었지만 문제없었네요.(쿠키런:오븐브레이크 로 테스트함)</p><p>171225 추가</p><p>업데이트 안되는 문제는 내부저장소 공간이 부족하다고 인식해서 그런거였습니다<br>설정 - 고급설정 - 메모리및저장공간 - 내부저장소 - 메뉴의 데이터이전 한 후 저장소 남은공간 있다고 인식되었고 업데이트 무사히 했습니다  </p>]]></content>
      
      <categories>
          
          <category> information </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 통합형저장소 </tag>
            
            <tag> 안드로이드 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>예전에 만든 지우개도장들</title>
      <link href="/2017/08/18/hobby/170818_%EC%A7%80%EC%9A%B0%EA%B0%9C%EB%8F%84%EC%9E%A5/"/>
      <url>/2017/08/18/hobby/170818_%EC%A7%80%EC%9A%B0%EA%B0%9C%EB%8F%84%EC%9E%A5/</url>
      <content type="html"><![CDATA[<p>예전에 팠던 지우개도장들!<br>전부 친구들 줌ㅎㅎㅎ<br>노가다도 심하고 눈도 아프지만 재미있었다!<br>다시 하라고 한다면 손떨려서 잘 못할것같다</p>]]></content>
      
      <categories>
          
          <category> hobby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 도장 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>나는 빵이다(I am Bread)</title>
      <link href="/2017/07/21/hobby/170721_%EB%82%98%EB%8A%94%EB%B9%B5%EC%9D%B4%EB%8B%A4/"/>
      <url>/2017/07/21/hobby/170721_%EB%82%98%EB%8A%94%EB%B9%B5%EC%9D%B4%EB%8B%A4/</url>
      <content type="html"><![CDATA[<p>나는 빵이다 라는 게임을 세일해서 3000원정도?에 싸게 샀어요</p><p>빵이 토스트가 되는 게임인데 신박하고 재밌습니다</p><iframe width="560" height="315" src="https://www.youtube.com/embed/Ov2S9N8yYr4" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>]]></content>
      
      <categories>
          
          <category> hobby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 게임 </tag>
            
            <tag> 나는빵이다 </tag>
            
            <tag> IamBread </tag>
            
            <tag> 스팀 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>크롬 검색이 강제로 야후로 돼요</title>
      <link href="/2017/07/21/information/170721_%ED%81%AC%EB%A1%AC%EA%B2%80%EC%83%89%EC%95%BC%ED%9B%84/"/>
      <url>/2017/07/21/information/170721_%ED%81%AC%EB%A1%AC%EA%B2%80%EC%83%89%EC%95%BC%ED%9B%84/</url>
      <content type="html"><![CDATA[<p><em>Update History</em></p><ul><li><em>2018.09.08 수정</em></li></ul><p>노트북을 사고 인터넷을 여기저기 들어가다보니 어느 순간부터 크롬 시작페이지가 구글이 아닌 다른 곳으로 가지고, 주소창에 검색을 하면 구글주소가 뜨는 듯 하더니 야후로 검색이 되네요. 뭐때문인가 찾아봤더니 크롬 확장프로그램에 못보던게 깔려있더라구요</p><blockquote><p>Plugins button</p></blockquote><p>이라는 확장프로그램이었습니다. <del>애드웨어인가봐요 새 노트북인데..</del></p><p><img src="/images/information/170721_크롬검색야후_1.png" alt=""></p><p>지금은 지워서 없는데요, 구글 확장프로그램 페이지에서 삭제를 하려고해도</p><blockquote><p>엔터프라이즈 정책에 의해 설치됨</p></blockquote><p>이라고만 뜨고 삭제버튼이 안먹더라구요</p><p>제가 지운 방법 포스팅합니다</p><h3 id="방법1-폴더에서-삭제"><a href="#방법1-폴더에서-삭제" class="headerlink" title="방법1 폴더에서 삭제"></a>방법1 폴더에서 삭제</h3><ul><li><p>먼저 <code>chrome://extensions/</code>  에 들어가서 못보던 확장프로그램이 있는지 확인합니다</p></li><li><p>그리고 개발자 모드에 체크합니다</p></li></ul><p><img src="/images/information/170721_크롬검색야후_2.png" alt=""></p><ul><li><p>개발자모드에 체크하면 ID가 뜨는데요 이 ID를 확인해줍니다</p></li><li><p>확인 후에 <code>C:\Users\(계정)\AppData\Local\Google\Chrome\User Data\Default\Extensions</code> 에 들어가보면 ID로된 폴더들이 있을건데요</p><p><em>만약 폴더가 보이지 않는다면 폴더 보기 옵션에서 숨긴항목 표시를 체크해주세요</em></p><p><img src="/images/information/170721_크롬검색야후_3.png" alt=""></p></li><li><p><code>C:\Windows\System32\GroupPolicy\Machine\Registry.pol</code> 파일을 지워주세요</p></li><li><p>이 파일을 지우고나서 <code>chrome://policy/</code>에 들어가보면 지워진걸 확인할 수 있습니다</p></li></ul><h3 id="방법2-레지스트리-편집기에서-삭제"><a href="#방법2-레지스트리-편집기에서-삭제" class="headerlink" title="방법2 레지스트리 편집기에서 삭제"></a>방법2 레지스트리 편집기에서 삭제</h3><p>만약 확장 프로그램이 이 방법으로 삭제되지 않는 경우 레지스트리 편집기에서 삭제하실 수도 있습니다.</p><ul><li><p>레지스트리 편집기 실행 <code>실행(Win + R) -&gt; regedit</code></p></li><li><p><code>HKEY_LOCAL_MACHINE - SOFTWARE - Policies - Google - Chrome - ExtensionInstallForcelist</code>  삭제</p></li></ul><p>이후에 크롬을 다시시작했더니 야후가 아니라 구글로 제대로 되었습니다</p><p>저는 이방법으로 해결했어요</p><p>잘못된 것이 있다면 댓글 달아주시기 바랍니다!</p>]]></content>
      
      <categories>
          
          <category> information </category>
          
      </categories>
      
      
    </entry>
    
  
  
</search>
